map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}
upstream web {
  server localhost:3000;
}
upstream api {
  server localhost:5000;
}

#upstream bi{
#  server localhost:8088;
#}

server {
    listen 80;
    server_name ayalon.promise-dev.com;
    return 301 https://$host$request_uri;
}

server {
  listen [::]:443 ssl;
  listen 443 ssl;
  server_name _;

  ssl_protocols TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";

  ssl_certificate /etc/nginx/conf.d/certs/w.promise-dev.com.crt;
  ssl_certificate_key /etc/nginx/conf.d/certs/w.promise-dev.com.key;

  add_header X-Content-Type-Options nosniff;
  add_header X-Frame-Options "DENY";
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
  add_header 'Referrer-Policy' 'strict-origin';
  
  access_log /spool/logs/nginx-access.log;
  error_log /spool/logs/nginx-error.log warn;

  location / {
    proxy_pass http://web;
  }

  location /api {
    # rewrite /api/(.*) /$1 break;
    proxy_pass http://api;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
  }
  
  #location /bi/ {
	#proxy_pass http://bi/;
	#proxy_set_header X-Scheme $scheme;
	#proxy_set_header X-Script-Name /bi;
	#proxy_set_header Host             $host;
	#proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
 #   }
    
  #location  ~ ^/(static|superset|sqllab|savedqueryview|druid|druiddatasourcemodelview)/ {
  #   try_files $uri http://localhost:8088/$uri;
  #}

  
  location ~ \.(pdf)$ {
    root /www/pdf;
  }
  
  location /pictures/ {
    root /usr/share/nginx/html/;
  }

  error_page 404 /404.html;
  location = /404.html {
    root /usr/share/nginx/html;
    internal;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
    internal;
  }
}