map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
upstream web {
  server native_laasakim_dev:3000;
}

upstream api {
  server node_server:5000;
}

#upstream bi {
#  server bi:8088;
#}

server {
  listen 443 ssl;
  server_name 127.0.01;
  #server_name 20.56.105.178;

  ssl_certificate /etc/nginx/certs/native.crt;
  ssl_certificate_key /etc/nginx/certs/native.key;

  access_log /spool/logs/nginx-access.log;
  error_log /spool/logs/nginx-error.log warn;

  location / {
    proxy_pass http://web;
  }

  location /api {
    proxy_pass http://api;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_send_timeout 300;
    proxy_read_timeout 300;
  }

 # location /bi {
 #   proxy_pass http://bi;
 #   proxy_set_header Host $host;
 #   #proxy_set_header X-Scheme $scheme;
 #   proxy_set_header X-Script-Name /bi;
 #   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
 #   proxy_set_header X-Forwarded-Proto "https";   
   # proxy_redirect off;
 # }

 # location ~ ^/(static|superset|sqllab|dashboard|savedqueryview|druid|tablemodelview|databaseview|databaseasync|dashboardmodelview|slicemodelview|dashboardasync|druiddatasourcemodelview|api|csstemplateasyncmodelview|chart|savedqueryviewapi|r|datasource|sliceaddview) {
 #   try_files $uri /bi/$uri /bi/$uri?$query_string; # @rules;
 # }

  #location @rules {
   # adapt "http://localhost" with your url
   #return 308 http://$host:8088/$uri$is_args$query_string;
  # rewrite ^(.*)$ /bi$1 last;
  #}

  location ~ \.(pdf)$ {
    root /www/pdf;
  }

  location /pictures/ {
    root /usr/share/nginx/html/;
  }

  error_page 404 /404.html;
  location = /404.html {
    root /usr/share/nginx/html;
    internal;
  }

  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /usr/share/nginx/html;
    internal;
  }
}